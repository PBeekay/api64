from http.server import BaseHTTPRequestHandler, HTTPServer
import json
import base64
from urllib.parse import urlparse, parse_qs

class Base64API(BaseHTTPRequestHandler):
    def _send_response(self, response):
        self.send_response(200) # HTTP 200 OK
        self.send_header("Content-Type", "application/json") # Ä°Ã§erik tipi olarak JSON belirtiyoruz
        self.end_headers() # headers'Ä± bitiriyoruz
        self.wfile.write(json.dumps(response).encode("utf-8")) # JSON'u byte Ã§evirip gÃ¶nderiyoruz

    def process_text(self, text, mode): # Metni iÅŸleme fonksiyonu
        try:
            mode = mode.lower()
            if mode == "encode": # Encode modu kullanÄ±lÄ±r
                result = base64.b64encode(text.encode("utf-8")).decode("utf-8")
            elif mode == "decode": # Decode modu kullanÄ±lÄ±r
                result = base64.b64decode(text).decode("utf-8")
            else: # HatalÄ± mod kullanÄ±lÄ±rsa hata mesajÄ± dÃ¶ndÃ¼rÃ¼lÃ¼r
                result = {"success": False, "error": f"Unknown mode: {mode}"}
            return {"success": True, "result": result}
        except Exception as e: # Hata durumunda hata mesajÄ± dÃ¶ndÃ¼rÃ¼lÃ¼r
            return {"success": False, "error": str(e)}


    def do_POST(self):
        content_length = int(self.headers.get("Content-Length", 0)) # POST body'nin uzunluÄŸunu alÄ±yoruz
        body = self.rfile.read(content_length) # POST body'ni okuyoruz
        try:
            data = json.loads(body) # POST body'yi JSON'a Ã§eviriyoruz
            text = data.get("text", "") # JSON'dan "text" alanÄ±nÄ± alÄ±yoruz
            mode = data.get("mode", "encode").lower() # JSON'dan "mode" alanÄ±nÄ± alÄ±yoruz ve kÃ¼Ã§Ã¼k harfe Ã§eviriyoruz
            result = self.process_text(text, mode)
        except Exception as e: # Hata durumunda hata mesajÄ± dÃ¶ndÃ¼rÃ¼lÃ¼r
            result = {"success": False, "error": str(e)}
            self._send_response(result)

    def do_GET(self):
        parsed_url = urlparse(self.path) # URL'yi ayrÄ±ÅŸtÄ±rÄ±yoruz
        query_params = parse_qs(parsed_url.query) # URL'deki query parametrelerini alÄ±yoruz
        text = query_params.get("text", [""])[0] # Query parametresinden "text" alanÄ±nÄ± alÄ±yoruz
        mode = query_params.get("mode", ["encode"])[0].lower() # Query parametresinden "mode" alanÄ±nÄ± alÄ±yoruz ve kÃ¼Ã§Ã¼k harfe Ã§eviriyoruz
        result = self.process_text(text, mode) # Metni iÅŸleme fonksiyonunu Ã§aÄŸÄ±rÄ±yoruz
        self._send_response(result) # YanÄ±tÄ± gÃ¶nderiyoruz

# Serveri baÅŸlat
def run(server_class=HTTPServer, handler_class=Base64API, port=8080): # Port numarasÄ±nÄ± 8080 olarak belirledik
    server_address = ("0.0.0.0", port) # Sunucu adresini ve portunu belirliyoruz
    httpd = server_class(server_address, handler_class) # HTTPServer'Ä± baÅŸlatÄ±yoruz
    print(f"ğŸš€ Server running on port {port}...") 
    httpd.serve_forever() # Sunucuyu sonsuz dÃ¶ngÃ¼de Ã§alÄ±ÅŸtÄ±rÄ±yoruz

if __name__ == "__main__":
    run()
